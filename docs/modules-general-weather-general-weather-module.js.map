{"version":3,"sources":["./src/app/modules/general-weather/general-weather-routing.module.ts","./src/app/modules/general-weather/general-weather.module.ts","./src/app/modules/general-weather/components/general/general.component.ts","./src/app/modules/general-weather/components/general/general.component.html"],"names":[],"mappings":"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","file":"modules-general-weather-general-weather-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GeneralComponent } from './components/general/general.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: GeneralComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GeneralWeatherRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { GeneralWeatherRoutingModule } from './general-weather-routing.module';\nimport { GeneralComponent } from './components/general/general.component';\nimport { StoreModule } from '@ngrx/store';\nimport { WEATHER_REDUCER_NODE, weatherReducer } from '@generalStore/weather.reducer';\nimport {ButtonModule} from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { EffectsModule } from '@ngrx/effects';\nimport { WeatherEffects } from '@generalStore/weather.effects';\nimport { SharedModule } from '@modules/shared/shared.module';\n\n@NgModule({\n  declarations: [GeneralComponent],\n  imports: [\n    CommonModule,\n    GeneralWeatherRoutingModule,\n    StoreModule.forFeature(WEATHER_REDUCER_NODE, weatherReducer),\n    ButtonModule,\n    RippleModule,\n    EffectsModule.forFeature([WeatherEffects]),\n    HttpClientModule,\n    SharedModule,\n  ]\n})\nexport class GeneralWeatherModule { }\n","import {AfterViewInit, ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { IweatherState } from '@generalStore/weather.reducer';\nimport {GetConditionsByKey, GetLocationByKey } from '@generalStore/weather.actions';\nimport {\n  weatherSelector,\n  GWLocationsSelector,\n  GWKeysSelector\n} from '@generalStore/weather.selectors';\nimport { Observable } from 'rxjs';\nimport { CommonForGeneralLocationsService } from '@services/common.service';\nimport { ApiService } from '@services/api.service';\nimport { ICondition } from '@interfaces/interfaces';\n\n@Component({\n  selector: 'app-general',\n  templateUrl: './general.component.html',\n  styleUrls: ['./general.component.scss']\n})\nexport class GeneralComponent implements OnInit {\n  objectKeys = Object.keys;\n  conditions$: Observable<IweatherState> = this.store$.pipe(select(weatherSelector));\n  generalLocations$: Observable<any> = this.store$.pipe(select(GWLocationsSelector));\n  keys$: Observable<string[]> = this.store$.pipe(select(GWKeysSelector));\n\n  type = 'general';\n  state: IweatherState;\n  list: ICondition[];\n  generalLocations: any;\n\n  constructor(\n    private store$: Store<IweatherState>,\n    public apiService: ApiService,\n    public generalServ: CommonForGeneralLocationsService\n  ) {\n    this.conditions$.subscribe(res => {\n      this.state = res;\n      console.log('general state', this.state);\n    });\n\n    this.generalLocations$.subscribe(res => {\n      this.generalLocations = res;\n    });\n\n    this.keys$.subscribe(res => {\n      // this.checkForKeysChanges();\n    });\n  }\n\n  ngOnInit(): void {\n    // this.getConditions();\n  }\n\n  getConditions(): void {\n    const keys = Object.keys(this.state.generalLocations);\n    keys.forEach(key => {\n      this.store$.dispatch(GetLocationByKey({key}));\n      this.store$.dispatch(GetConditionsByKey({key}));\n    });\n  }\n\n  checkForKeysChanges(): void {\n    const conditionsKeys = Object.keys(this.state.generalLocations);\n    if (!this.state.keys?.length || !conditionsKeys.length) {\n      return;\n    }\n    if (JSON.stringify(this.state.keys) !== JSON.stringify(conditionsKeys)) {\n      const key = this.state.keys.find(keyItem => !conditionsKeys.includes(keyItem));\n      this.store$.dispatch(GetLocationByKey({ key }));\n      this.store$.dispatch(GetConditionsByKey({ key }));\n    }\n  }\n\n  getLocationFromLink(link: string): any[] {\n    const key = link.split('/').find(item => this.state.keys.includes(item));\n    return this.generalLocations[key.toString()];\n  }\n\n}\n","  <div class=\"container\" *ngIf=\"conditions$ | async\">\n    <div class=\"row\">\n      <h1>Your honest weather guide <i class=\"pi pi-fw pi-sun\"></i></h1>\n      <app-auto-complete\n        [type]=\"type\"\n      ></app-auto-complete\n      >\n      <h3>Current conditions for your locations</h3>\n      <p>date: {{state.date | date: 'MMM d, y'}}</p>\n      <div class=\"main row\" *ngIf=\"generalLocations\">\n        <app-item-condition\n          class=\"col-4 mb-3\"\n          *ngFor=\"let item of objectKeys(generalLocations)\"\n          [item]=\"generalLocations[item]\"\n          [location]=\"generalLocations[item]\"\n        >\n        </app-item-condition>\n      </div>\n    </div>\n  </div>\n\n  <app-loading-spinner></app-loading-spinner>\n\n"],"sourceRoot":"webpack:///"}