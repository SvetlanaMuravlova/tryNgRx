{"version":3,"sources":["./src/app/modules/general-weather/store/general-weather/weather.effects.ts","./src/app/modules/shared/item-condition/item-condition.component.ts","./src/app/modules/shared/item-condition/item-condition.component.html","./src/app/modules/general-weather/store/general-weather/weather.actions.ts","./src/app/services/error.service.ts","./src/environments/environment.ts","./src/app/modules/shared/loading-spinner/loading-spinner.component.ts","./src/app/modules/shared/loading-spinner/loading-spinner.component.html","./src/app/modules/shared/shared.module.ts","./src/app/services/api.service.ts","./src/app/modules/shared/auto-complete/auto-complete.component.ts","./src/app/modules/shared/auto-complete/auto-complete.component.html","./src/app/services/common.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/general-weather/store/general-weather/weather.selectors.ts","./src/app/modules/general-weather/store/general-weather/weather.reducer.ts","./src/app/app.module.ts","./src/app/modules/shared/nav-bar/nav-bar.component.ts","./src/app/modules/shared/nav-bar/nav-bar.component.html","./src/app/services/count-apis.service.ts","./src/app/interceptors/headers-interceptor.ts","./src/app/modules/shared/error/error.component.ts","./src/app/modules/shared/error/error.component.html","./src/app/app-routing.module.ts","./src/app/interceptors/error-interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, mergeMap, finalize } from 'rxjs/operators';\nimport { ApiService } from '@services/api.service';\nimport { weatherActionsType,  GetConditionsByKey, SetLoading, GetLocationByKey } from '@generalStore/weather.actions';\nimport { IweatherState } from '@generalStore/weather.reducer';\nimport { Store } from '@ngrx/store';\nimport { CountApisService } from '@services/count-apis.service';\n\n\n@Injectable()\n\nexport class WeatherEffects {\n\n  constructor(\n    private actions$: Actions,\n    private apiService: ApiService,\n    private store$: Store<IweatherState>,\n    private apiCounts: CountApisService\n  ) {}\n\n  loadConditionss$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GetConditionsByKey),\n      mergeMap( (action) => (this.apiService.getConditionBykey(action.key))\n        .pipe(\n          map(response => {\n            this.apiCounts.updateAmount();\n            return { type: weatherActionsType.loaddedSuccessCondition, payload: {response: response[0], key: action.key}};\n          }),\n          finalize(() => this.store$.dispatch(SetLoading({value: false})))\n        )\n      )\n    )\n  );\n\n  loadLocation$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GetLocationByKey),\n      mergeMap( (action) => (this.apiService.getLocationBykey(action.key))\n        .pipe(\n          map(response => {\n            this.apiCounts.updateAmount();\n            return { type: weatherActionsType.loaddedSuccessLocation, payload: response};\n          }),\n          finalize(() => this.store$.dispatch(SetLoading({value: false})))\n        )\n      )\n    )\n  );\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ICondition } from '@interfaces/interfaces';\nimport { DatePipe } from '@angular/common';\nimport { IweatherState } from '@generalStore/weather.reducer';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { weatherSelector } from '@generalStore/weather.selectors';\n\n\n\n@Component({\n  selector: 'app-item-condition',\n  templateUrl: './item-condition.component.html',\n  styleUrls: ['./item-condition.component.scss'],\n  providers: [DatePipe]\n})\nexport class ItemConditionComponent implements OnInit {\n  @Input() item: any;\n  @Input() location: any;\n  // conditions$: Observable<IweatherState> = this.store$.pipe(select(weatherSelector));\n  // state;\n  constructor(\n    private datePipe: DatePipe,\n    private store$: Store<IweatherState>\n  ) {\n    // this.conditions$.subscribe(res => {\n    //   this.state = res;\n    //   console.log('item state',res)\n    // })\n  }\n\n  ngOnInit(): void {\n    // console.log('ITEM', this.item);\n    // console.log(this.location)\n\n  }\n\n  initeImgUrl(icon: number): string {\n    const iconNum = icon < 10 ? `0${icon}` : icon;\n    return `https://developer.accuweather.com/sites/default/files/${iconNum}-s.png`;\n  }\n\n  getTitleOfCard(): string {\n    return `${this.location.Type} ${this.location.LocalizedName}, ${this.location.Country}`\n  }\n\n  getDate(): string {\n    return this.datePipe.transform(this.item.LocalObservationDateTime, 'EEEE, MMMM d, y')\n  }\n\n}\n","<div class=\"item-box h-100\" *ngIf=\"item && item.conditions\">\n    <p-card [header]=\"getTitleOfCard()\" [subheader]=\"getDate()\" [style]=\"{width: '100%'}\" styleClass=\"p-card-shadow\">\n        <div class=\"img_box\">\n            <img alt=\"Card\" [src]=\"initeImgUrl(item.conditions.WeatherIcon)\">\n            <p>{{item.conditions.WeatherText}}</p>\n        </div>\n        <div class=\"information_box\">\n            <p>current t {{item.conditions.Temperature.Metric.Value}} &deg;C</p>\n            <p>Wind {{item.conditions.Wind.Speed.Metric.Value}} {{item.conditions.Wind.Speed.Metric.Unit}}</p>\n        </div>\n        <ng-template pTemplate=\"footer\">\n            <p-button label=\"Delete\" icon=\"pi pi-trash\" styleClass=\"p-button-secondary\"></p-button>\n        </ng-template>\n    </p-card>\n</div>\n","import { Action, createAction, props } from \"@ngrx/store\";\n\nexport enum weatherActionsType {\n    updateKeys = '[WEATHER] add key',\n    getConditions = '[WEATHER] get condition by key',\n    loaddedSuccessCondition = '[WEATHER] conditions by key loadded success',\n    loading = '[WEATHER] loading spinner',\n    getLocation = '[WEATHER] get location by key',\n    loaddedSuccessLocation = '[WEATHER] location by key loadded success',\n}\n\nexport const GetConditionsByKey = createAction(\n    weatherActionsType.getConditions,\n    props<{key: string}>()\n);\n\nexport const GetLocationByKey = createAction(\n    weatherActionsType.getLocation,\n    props<{key: string}>()\n);\n\nexport const LocationLoaddedSuccess = createAction(\n    weatherActionsType.loaddedSuccessLocation,\n    props<{payload: any}>()\n);\n\nexport const ConditionLoaddedSuccess = createAction(\n    weatherActionsType.loaddedSuccessCondition,\n    props<{payload: any}>()\n);\n\nexport const SetLoading = createAction(\n    weatherActionsType.loading,\n    props<{value: boolean}>()\n);\n\nexport const UpdateKeysLocation = createAction(\n    weatherActionsType.updateKeys,\n    props<{keys: string[]}>()\n);\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n  errorSource: BehaviorSubject<Observable<string>> = new BehaviorSubject(of(''));\n\n  constructor() { }\n\n  createError(message: string): void{\n    this.errorSource.next(of(message));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  environment: 'development',\n  API_URL: 'http://dataservice.accuweather.com',\n  API_KEY: 'CbJeA81oG4jcAezAQnwdV5GVsUnd6qJo'\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spinner',\n  templateUrl: './loading-spinner.component.html',\n  styleUrls: ['./loading-spinner.component.scss']\n})\nexport class LoadingSpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"back_drop w-100 h-100\">\n  <p-progressSpinner></p-progressSpinner>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutoCompleteComponent } from './auto-complete/auto-complete.component';\nimport {InputTextModule} from 'primeng/inputtext';\nimport { FormsModule } from '@angular/forms';\nimport { ItemConditionComponent } from './item-condition/item-condition.component';\nimport {CardModule} from 'primeng/card';\nimport {ButtonModule} from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { MenubarModule } from 'primeng/menubar';\nimport { ErrorComponent } from './error/error.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { LoadingSpinnerComponent } from './loading-spinner/loading-spinner.component';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\n\n@NgModule({\n  declarations: [AutoCompleteComponent, ItemConditionComponent, NavBarComponent, ErrorComponent, LoadingSpinnerComponent],\n  imports: [\n    CommonModule,\n    InputTextModule,\n    FormsModule,\n    CardModule,\n    ButtonModule,\n    RippleModule,\n    EffectsModule,\n    MenubarModule,\n    ModalModule.forRoot(),\n    ProgressSpinnerModule\n  ],\n  exports: [\n    AutoCompleteComponent,\n    ItemConditionComponent,\n    NavBarComponent,\n    ErrorComponent,\n    LoadingSpinnerComponent\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport {map} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private apiUrl = environment.API_URL;\n  private key = environment.API_KEY;\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getConditionBykey(key: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/currentconditions/v1/${key}`, {\n      params: {\n        apikey: this.key,\n        details: 'true'\n      }\n    });\n  }\n\n  getLocationByAutoComplete(value: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/locations/v1/cities/autocomplete`, {\n      params: {\n        apikey: this.key,\n        details: 'true',\n        q: value\n      }\n    });\n  }\n\n  getLocationBykey(key: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/locations/v1/${key}`, {\n      params: {\n        apikey: this.key,\n        details: 'true'\n      }\n    });\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApiService } from '@services/api.service';\nimport { catchError, finalize } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { IAutoCompleteItem } from '@interfaces/interfaces';\nimport { CommonForGeneralLocationsService } from '@services/common.service';\nimport { CountApisService } from '@services/count-apis.service';\n\n@Component({\n  selector: 'app-auto-complete',\n  templateUrl: './auto-complete.component.html',\n  styleUrls: ['./auto-complete.component.scss']\n})\nexport class AutoCompleteComponent implements OnInit {\n  @Input() type: string;\n  value: string;\n  placeHolder = 'pi pi-search';\n  disabled = false;\n  items: IAutoCompleteItem[] = [];\n\n  constructor(\n    public apiService: ApiService,\n    public commonServ: CommonForGeneralLocationsService,\n    private apiCounts: CountApisService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  updateValue(): Observable<null> | void {\n    if (this.value && this.value.length > 4) {\n      this.setInputSettings(true);\n      this.apiService.getLocationByAutoComplete(this.value).subscribe((res: IAutoCompleteItem[]) => {\n        this.items = res;\n        this.setInputSettings(false);\n        this.apiCounts.updateAmount();\n      }), catchError(err => {\n        this.setInputSettings(false);\n        return of();\n      }), finalize(() => {\n      });\n    } else {\n      this.items = [];\n      this.setInputSettings(false);\n    }\n  }\n\n  setInputSettings(disabled: boolean): void {\n    this.placeHolder = disabled ? 'pi pi-spin pi-spinner' : 'pi pi-search';\n    this.disabled = disabled;\n  }\n\n  addAddresse(item: IAutoCompleteItem): void {\n    this.value = `${item.Type}, ${item.LocalizedName}, ${item.Country.LocalizedName}`;\n    this.commonServ.addGeneralLocation(item.Key);\n    this.items = [];\n  }\n\n}\n","<h2>Add new location into your list</h2>\n<div class=\"select__box\" style=\"width: 100%;\">\n    <span class=\"p-input-icon-left\">\n        <i [class]=\"placeHolder\"></i>\n        <input [disabled]=\"disabled\" type=\"text\" pInputText [(ngModel)]=\"value\" (keyup)=\"updateValue()\" >         \n    </span>\n    <div class=\"select__items_box\" *ngIf=\"items && items.length\">\n        <div class=\"select__item\" *ngFor=\"let item of items\" (click)=\"addAddresse(item)\">\n            {{item.Type}}, {{item.LocalizedName}}, {{item.Country.LocalizedName}}\n        </div>\n    </div>\n</div>\n","import { Injectable} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\nimport { IweatherState } from '@generalStore/weather.reducer';\nimport { GWLocationsKeySelector, GWLocationsSelector } from '@generalStore/weather.selectors';\nimport {GetConditionsByKey, GetLocationByKey, SetLoading, UpdateKeysLocation} from '@generalStore/weather.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonForGeneralLocationsService {\n  generalLocations$: Subscription;\n  keysGeneralLocation: string[];\n  KEY_FOR_GENERAL_LOCATIONS = 'GeneralWeatherLocations';\n\n  constructor(\n    private store$: Store<IweatherState>,\n  ) {\n    if (this.checkSessionLocations()) {\n      this.initGeneralLocation(this.getGeneralLocations());\n    } else {\n      this.subscribeOnStoreGeneralLocations();\n    }\n  }\n\n  initGeneralLocation(value: string[]): void {\n    this.keysGeneralLocation = value;\n    this.saveGeneralLocations();\n    this.updateStoreWithGeneralKeys();\n    console.log('Subscription', this.generalLocations$);\n    if (!this.generalLocations$) {\n      this.subscribeOnStoreGeneralLocations();\n    }\n  }\n\n  addGeneralLocation(key: string): void {\n    if (!this.keysGeneralLocation.includes(key)) {\n      this.keysGeneralLocation.push(key);\n      this.updateStoreWithGeneralKeys();\n    }\n  }\n\n  subscribeOnStoreGeneralLocations(): void {\n    this.generalLocations$ = this.store$.pipe(select(GWLocationsKeySelector)).subscribe(res => {\n      if (res && res.length) {\n        console.log('common service keys', res);\n        this.keysGeneralLocation = Object.assign([], res);\n        this.checkStoreGeneralLocationsWithKeys();\n        this.saveGeneralLocations();\n      }\n    });\n  }\n\n  updateStoreWithGeneralKeys(): void {\n    this.store$.dispatch(UpdateKeysLocation({keys: this.keysGeneralLocation}));\n  }\n\n  getGeneralLocationWithKey(key: string): void {\n    this.setLoading(true);\n    this.store$.dispatch(GetLocationByKey({ key }));\n    this.store$.dispatch(GetConditionsByKey({ key }));\n  }\n\n  checkStoreGeneralLocationsWithKeys(): void {\n    this.generalLocations$ = this.store$.pipe(select(GWLocationsSelector)).subscribe(res => {\n      console.log('general locations common service', res);\n      const keyForUpdating = this.keysGeneralLocation.find(key => !res?.[key]);\n      if (!keyForUpdating) {\n        return;\n      }\n\n      this.getGeneralLocationWithKey(keyForUpdating);\n    });\n  }\n\n  saveGeneralLocations(): void {\n    window.sessionStorage.setItem(this.KEY_FOR_GENERAL_LOCATIONS, JSON.stringify(this.keysGeneralLocation));\n  }\n\n  checkSessionLocations(): boolean {\n    return !!window.sessionStorage.getItem(this.KEY_FOR_GENERAL_LOCATIONS);\n  }\n\n  getGeneralLocations(): string[] {\n    return JSON.parse(window.sessionStorage.getItem(this.KEY_FOR_GENERAL_LOCATIONS));\n  }\n\n  setLoading(value): void {\n    this.store$.dispatch(SetLoading({value}));\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<app-nav-bar></app-nav-bar>\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n<app-error></app-error>\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { IweatherState, WEATHER_REDUCER_NODE } from '@generalStore/weather.reducer';\n\nexport const weatherFeatureSelector = createFeatureSelector<IweatherState>(WEATHER_REDUCER_NODE);\nexport const weatherSelector = createSelector(weatherFeatureSelector, state => state);\n\nexport const GWLocationsKeyFeatureSelector = createFeatureSelector<IweatherState>(WEATHER_REDUCER_NODE);\nexport const GWLocationsKeySelector = createSelector(GWLocationsKeyFeatureSelector, state => state.keys);\n\nexport const GWLocationsFeatureSelector = createFeatureSelector<IweatherState>(WEATHER_REDUCER_NODE);\nexport const GWLocationsSelector = createSelector(GWLocationsFeatureSelector, state => state.generalLocations);\n\nexport const GWKeysFeatureSelector = createFeatureSelector<IweatherState>(WEATHER_REDUCER_NODE);\nexport const GWKeysSelector = createSelector(GWKeysFeatureSelector, state => state.keys);\n\nexport const GWLoadingFeatureSelector = createFeatureSelector<IweatherState>(WEATHER_REDUCER_NODE);\nexport const GWKLoadingSelector = createSelector(GWLoadingFeatureSelector, state => state.loading);\n","import { weatherActionsType } from './weather.actions';\n\nexport const WEATHER_REDUCER_NODE = 'weather';\n\nexport interface IweatherState  {\n    date: string;\n    keys: string[];\n    loading: boolean;\n    generalLocations?: any;\n}\n\nconst intialStateCurrentConditions: IweatherState = {\n    date: new Date().toString(),\n    keys: ['323903', '324505', '325343'],\n    loading: false\n}\n\nexport const weatherReducer = (incomState: IweatherState  = intialStateCurrentConditions, action) => {\n    switch (action.type) {\n        case weatherActionsType.updateKeys:\n          console.log('key reducer add', action.keys);\n          return {\n                ... incomState,\n                keys: action.keys\n            };\n          break;\n        case weatherActionsType.loaddedSuccessCondition:\n            return {\n                ...incomState,\n              generalLocations: editegeneralLocationConditions(incomState, action)\n            };\n            break;\n\n        case weatherActionsType.loaddedSuccessLocation:\n        return {\n            ... incomState,\n            generalLocations: editeGeneralLocations(incomState, action)\n        };\n        break;\n        default:\n            return incomState;\n    }\n};\n\nfunction editeLocation(value) {\n    return {\n        Type: value.Type,\n        LocalizedName: value.LocalizedName,\n        Country: value.Country.LocalizedName,\n        GeoPosition: {\n            Longitude: value.GeoPosition.Longitude,\n            Latitude: value.GeoPosition.Latitude\n        }\n    };\n}\n\nfunction editeGeneralLocations(incomState, action) {\n  return {\n    ... incomState.generalLocations,\n    [action.payload.Key]: editeLocation(action.payload)\n  };\n}\n\nfunction editeCondition(value) {\n    return {\n        WeatherIcon: value.WeatherIcon,\n        WeatherText: value.WeatherText,\n        Temperature: {\n            Metric: {\n                Value: value.Temperature.Metric.Value\n            }\n        },\n        Wind: {\n            Speed: {\n                Metric: {\n                    Value: value.Wind.Speed.Metric.Value\n                }\n            }\n        },\n        LocalObservationDateTime: value.LocalObservationDateTime\n    };\n}\n\nfunction editegeneralLocationConditions(incomState, action) {\n  return {\n    ...incomState.generalLocations,\n    [action.payload.key]: {\n      ...incomState.generalLocations[action.payload.key],\n      conditions: editeCondition(action.payload.response)\n    }\n  };\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EffectsModule } from '@ngrx/effects';\nimport { WeatherEffects } from '@generalStore/weather.effects';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HeadersInterceptor } from 'src/app/interceptors/headers-interceptor';\nimport { ErrorsInterceptor } from './interceptors/error-interceptor';\nimport { SharedModule } from './modules/shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    StoreModule.forRoot({}, {\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true\n      }\n    }),\n    StoreDevtoolsModule.instrument({logOnly: environment.production }),\n    StoreRouterConnectingModule.forRoot(),\n    EffectsModule.forRoot([WeatherEffects]),\n    HttpClientModule,\n    SharedModule\n  ],\n  providers: [\n    [\n      {\n        provide: HTTP_INTERCEPTORS,\n        useClass: HeadersInterceptor,\n        multi: true\n      },\n      {\n        provide: HTTP_INTERCEPTORS,\n        useClass: ErrorsInterceptor,\n        multi: true\n      }\n    ]\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {AfterViewChecked, ChangeDetectorRef, Component, OnDestroy, OnInit} from '@angular/core';\nimport { PrimeNGConfig } from 'primeng/api';\nimport { MenuItem } from 'primeng/api';\nimport { CountApisService } from 'src/app/services/count-apis.service';\nimport { takeUntil } from 'rxjs/operators';\nimport {from, Subject} from 'rxjs';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit, AfterViewChecked, OnDestroy {\n  items: MenuItem[];\n  apiAmount: number;\n  notDestroy$ = new Subject();\n  constructor(\n    private primengConfig: PrimeNGConfig,\n    public countApis: CountApisService,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.countApis.valueSource.pipe(\n      takeUntil(this.notDestroy$)\n    ).subscribe(res => {\n      this.apiAmount = res;\n    });\n  }\n\n  ngOnInit(): void {\n    this.primengConfig.ripple = true;\n    this.items = [\n      {\n        label: 'Current weather',\n        url: '/general',\n        icon: 'pi pi-fw pi-sun'\n      },\n      {\n        label: 'Favourite locations',\n        url: '/general/favourite',\n        icon: 'pi pi-fw pi-cloud'\n      }\n    ];\n  }\n\n  ngAfterViewChecked(): void {\n    this.cdr.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    this.notDestroy$.complete();\n  }\n}\n","<p-menubar [model]=\"items\">\n  <p>Amount apis {{ apiAmount }}</p>\n</p-menubar>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountApisService {\n  SESSION_KEY = 'ApiAmount';\n  value = {\n    amount: 0,\n    date: `${new Date().getDate()}${new Date().getMonth()}${new Date().getFullYear()}`\n  };\n  valueSource: BehaviorSubject<number> = new BehaviorSubject(this.value.amount);\n\n  constructor() {\n    this.initAmount();\n  }\n\n  set amount(value) {\n    window.sessionStorage.setItem(this.SESSION_KEY, JSON.stringify(value));\n  }\n\n  initAmount(): void {\n    if (this.amount &&\n      this.amount.date === this.value.date){\n        this.value = this.amount;\n    }\n\n    if (!this.amount ||\n    (this.amount && this.amount.date !== this.value.date)) {\n      this.amount = this.value;\n    }\n    this.valueSource.next(this.value.amount);\n  }\n\n  get amount(): { amount: number; date: string; } {\n    return JSON.parse(window.sessionStorage.getItem(this.SESSION_KEY));\n  }\n\n  updateAmount(): void {\n    this.value.amount ++;\n    this.valueSource.next(this.value.amount);\n    this.amount = this.value;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class  HeadersInterceptor implements HttpInterceptor {\n    private key = environment.API_KEY;\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        req.clone({\n            setParams: {\n                apikey: this.key\n            }\n        });\n        return next.handle(req);\n    }\n\n}\n","import { Component, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ErrorService } from '@services/error.service';\nimport { Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit, OnDestroy {\n  notDestroy$ = new Subject();\n  modalRef: BsModalRef;\n  errorMessage: string;\n  @ViewChild('template') template: TemplateRef<any>;\n\n  constructor(\n    private errorServ: ErrorService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n  this.checkError();\n  }\n\n  checkError(): void {\n    this.errorServ.errorSource.pipe(\n      takeUntil(this.notDestroy$),\n      switchMap(res => res)\n    ).subscribe(res => {\n      if (res) {\n        this.errorMessage = res;\n        this.openModal(this.template);\n      }\n    });\n  }\n\n  openModal(template: TemplateRef<any>): void {\n    if (!this.modalService.getModalsCount()) {\n      this.modalRef = this.modalService.show(template);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.notDestroy$.complete();\n  }\n\n}\n","<ng-template #template>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Sorry</h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    {{errorMessage}}\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'general',\n    children:[\n      {\n        path: '',\n        pathMatch: 'full',\n        loadChildren: () => import('./modules/general-weather/general-weather.module').then(m => m.GeneralWeatherModule)\n      }\n    ]\n  },\n  {\n    path: 'favourite',\n    children:[\n      {\n        path: '',\n        pathMatch: 'full',\n        loadChildren: () => import('./modules/favourite-cities/favourite-cities.module').then(m => m.FavouriteCitiesModule)\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'general'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { catchError, onErrorResumeNext } from 'rxjs/operators';\nimport { ErrorService } from '@services/error.service';\n\n@Injectable()\nexport class  ErrorsInterceptor implements HttpInterceptor {\n  constructor(\n    private errorServ: ErrorService\n  ){}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).\n    pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n          errorMessage = `Error: ${error.error.message}`;\n        } else {\n          errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        this.errorServ.createError(errorMessage);\n        return throwError(errorMessage);\n      })\n    )  as Observable<HttpEvent<any>>;\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}